import { useEffect, useState } from 'react';
import Head from 'next/head';
import type { NextPage } from 'next';
import { Alert, Button, Form, InputGroup, Spinner } from 'reactstrap';
import styles from '../styles/Home.module.css';
import { useForm } from 'react-hook-form';
import { api } from '../src/services/api';
import { coRotaInscrito, coRotaPlanos } from '../src/Constantes';
import { useSubscriberContext } from '../src/context/Subscriber/SubscriberContext';
import Router from 'next/router';
import { TSubscriber } from '../src/types';
import Link from 'next/link';

const Home: NextPage = () => {
  const [erro, setErro] = useState({ show: false, msg: '' });
  const { handleChangeInscrito } = useSubscriberContext();
  const { register, handleSubmit } = useForm();
  const [loading, setLoading] = useState(false);

  const handleSaveSubscriber = async (data: any) => {
    setLoading(true);
    const { name, email } = data;

    if (name && email) {
      try {
        const res = await api.post(`${coRotaInscrito}`, { name, email });

        if (res.status === 201) {
          const data: TSubscriber = res.data;
          handleChangeInscrito(data);

          Router.push('/Planos');
          setLoading(false);
        }
      } catch (err) {
        //@ts-ignore
        setErro({ show: true, msg: err?.response?.data?.erro });
        //@ts-ignore
        handleChangeInscrito(err?.response?.data?.ExistSubscriber);
        setLoading(false);
      }
    }
  };

  const loadPlanos = async () => {
    const res = await api.get(`${coRotaPlanos}`);
    if (res.data.length === 0) {
      Router.push('/CadastrarPlanos');
    }
  };

  useEffect(() => {
    loadPlanos();
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Wa Project</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        {/* colocar input de email e nome */}
        <h1 className={styles.title}>Inscreva-se Já</h1>
        {/* descrição dizendo que pra cadastrar o email ee o nome pra asseguir fazer a assinatura do plano */}
        <p className={styles.description}>
          Preencha os campos abaixo para começar a assinar o plano
        </p>

        <Form onSubmit={handleSubmit(handleSaveSubscriber)}>
          <InputGroup>
            <input
              {...register('name')}
              className={styles.inputEmail}
              type='text'
              required
              placeholder='nome'
            />
          </InputGroup>

          <InputGroup>
            <input
              {...register('email')}
              className={styles.inputEmail}
              type='email'
              required
              placeholder='email'
            />
          </InputGroup>

          {/* mostrar um alerta mensagem de erro */}

          {erro.show && (
            <Alert
              isOpen={erro.show}
              toggle={() => setErro({ show: false, msg: '' })}
              color='danger'
            >
              <span className='alert-text  ml-1'>
                <strong>{erro.msg}</strong>
                <Link href={'/Planos'}> Deseja Alterar/Assinar Plano</Link>
              </span>
            </Alert>
          )}

          <div className={styles.buttonContainer}>
            <Button type='submit' className={styles.buttonCadastro}>
              {loading ? (
                <Spinner
                  color='white'
                  style={{
                    width: '1rem',
                    height: '1rem',
                    borderWidth: '.3rem',
                  }}
                />
              ) : (
                <span>Cadastrar</span>
              )}
            </Button>
          </div>
        </Form>
        {/* colocar botao para fazer o cadastro */}
      </main>
    </div>
  );
};

export default Home;
